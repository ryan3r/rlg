#!/usr/bin/env bash

# Get the git function
git() {
    /mnt/c/Program\ Files/Git/bin/git.exe $*;
}

# Clean the terminal before outputing
if [ "$1" = "-c" ]; then
	clear
fi

# Get the assignment number
if [ -z "$1" ] || [ "$1" = "-c" ]; then
	read -p "Assignment number: " assignment
else
	assignment=$1
fi

package_name="Ray_Ryan.assignment-$assignment"
workspace="/mnt/c/Users/ryan3/Documents/projects/cs327"

cd $workspace

# Remove any binaries
scripts/clean

# Make the change log
if [ -d ".git" ]; then
	echo "Writing CHANGELOG"
	git log > CHANGELOG

	echo "Adding a tag for this version"
	git tag v$assignment
fi

# Create the submissions directory
mkdir -p $workspace/submissions

# Create a copy with the correct name
cd ..
cp -r  $workspace /tmp/$package_name

# Remove any empty folders
cd /tmp/$package_name
#find . -type d -empty -delete
rm -rf .vscode .gitignore submissions rlg327-s2018* ci-test deploy .git deb-manifest pdcurs36 scripts CMakeLists.txt
mv cs327-Makefile Makefile
cd ..

echo "Compressing files"
# Make the tar ball
tar cfz $package_name.tar.gz $package_name

# Move the tar ball to the workspace
cp /tmp/$package_name.tar.gz  $workspace/submissions/$package_name.tar.gz

echo "Cleaning up"
# Clean up
rm -rf $package_name
rm -f $package_name.tar.gz

# Put the build directory back
cd $workspace
rm CHANGELOG

# Tell the user that we are done
echo "Build complete"
